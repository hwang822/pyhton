# Classes is template to create object related data and function to operate this data.
# Python is easy to create the class.

#sample to create classes.

class User
  pass

# user1 is object or instance of class User.
user1 = User()
user1.first_name = "Dave"
user1.last_name = "Bowman"

print(user1.first_name)
Dave

print(user1.last(name)
Bowman
first_name = "Arthur"
last_name = "Clarke"

print(first_name, last_name)
Arthur Clarke

print(user1.first_name, user1.last_name)
Dave Bowman

user2 = User()
user2.first_name = "Frank"
user2.last_name = "Poole"
print(user2.first_name, user2.last_name)
Frank Poole


user1.age = 37
user2.favorite_book = "2001: A Sapce Odyssey"


print(user1.age)
37

print(user2.age)
error:


imort datetime

class user:
  """A member of friendFace. For now we are only storing their name and birthday.
  But soon we will sotre an uncomfortable amount of user inormation."""

  def __init__(self, full name, birthday):
     self.name = full_name
     self.birthday = birthday # yyyymmdd
     
     #Extract first and last names.
     name_pieces = full_name.split(" ")
     self.first_name = name_pieces[0]
     self.last_name = name_pieces[-1]
     
  def age(self):
     """Return the age of the user in years."""
     today = datetime.date(2001,5,12)
     yyyy = int(self.birthday[0:4])
     mm = int(self.birthday[4:6])
     dd = int(self.birthday[6:8])
     dob = datetime.date(yyyy,mm,dd) # Date of birth
     age_in_days = (today-dob).days
     age_in_years = age_in_days/365
     return int(age_in_years)
     
     
     
user = User("Dave Bowman", "19710315")
print(user.age())
30

     
     
     
  
    
    
     
     





